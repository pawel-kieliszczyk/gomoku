Import('env')
local_env = env.Clone()


local_env.AppendUnique(CPPPATH = ['Libraries/googletest/gtest-1.8.0/include'])
local_env.AppendUnique(CPPPATH = ['Libraries/googlemock/gmock-1.8.0/include'])
local_env.AppendUnique(CPPPATH = ['../source'])
local_env.AppendUnique(CPPPATH = ['tests'])

local_env.AppendUnique(LIBPATH = ['Libraries/googletest', 'Libraries/googlemock'])

local_env.AppendUnique(LIBS = ['gtest', 'gmock', 'pthread'])


enable_gcov = ARGUMENTS.get('enable_gcov', False)
if enable_gcov:
	local_env.AppendUnique(CXXFLAGS = ['-fprofile-arcs', '-ftest-coverage'])
	local_env.AppendUnique(LINKFLAGS = '-fprofile-arcs')


source_files = ['tests/main.cpp']

source_files += ['source/application/artificial_intelligence/adjacent_move_candidates_selector.cc']
source_files += ['source/application/artificial_intelligence/board_evaluator.cc']
source_files += ['source/application/game_controller.cc']
source_files += ['source/application/game_finished_when_five_in_row_policy.cc']
source_files += ['source/domain/board.cc']

source_files += ['tests/application/artificial_intelligence/AdjacentMoveCandidatesSelectorTester.cpp']
source_files += ['tests/application/GameControllerTester.cpp']
source_files += ['tests/application/GameFinishedWhenFiveInRowPolicyTester.cpp']
source_files += ['tests/domain/BoardTester.cpp']


target = 'test'

program = local_env.Program(target, source_files)
Default(program)
env.Alias(target, '.')


local_env.Depends(program, env.Alias('gtest'))
local_env.Depends(program, env.Alias('gmock'))
